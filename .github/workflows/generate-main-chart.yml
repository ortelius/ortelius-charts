name: Generate Main Charts

#force build

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - 'chart/**'

permissions:  # added using https://github.com/step-security/secure-repo
  contents: read

jobs:
  release:
    permissions:
      contents: write  # for stefanzweifel/git-auto-commit-action to push code in repo
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@6b3083af2869dc3314a0257a42f4af696cc79ba3 # v2.3.1
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # v3.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Use Node.js
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: '18.x'

      - name: Generate Main Chart
        run: |
          yarn install
          node main.js

      - name: Prepare GPG key
        run: |
          gpg_dir=.cr-gpg
          mkdir "$gpg_dir"
          keyring="$gpg_dir/secring.gpg"
          base64 -d <<< "$GPG_KEYRING_BASE64" > "$keyring"
          passphrase_file="$gpg_dir/passphrase"
          echo "$GPG_PASSPHRASE" > "$passphrase_file"
          echo "CR_PASSPHRASE_FILE=$passphrase_file" >> "$GITHUB_ENV"
          echo "CR_KEYRING=$keyring" >> "$GITHUB_ENV"
          echo "CR_KEY=$(cat .cr.yaml | grep key: | awk '{print $(NF-1)" "$NF}')" >> "$GITHUB_ENV"
        env:
          GPG_KEYRING_BASE64: "${{ secrets.GPG_KEYRING_BASE64 }}"
          GPG_PASSPHRASE: "${{ secrets.GPG_PASSPHRASE }}"

      - name: Run chart-releaser
        run: |
          set -x
          git pull --all; for remote in `git branch -r | grep -v main | grep -v \>`; do git branch --track ${remote#origin/} $remote; done
          TAG=$(basename $(helm package chart/ortelius -u --key "${{ env.CR_KEY }}" --sign --keyring "${{ env.CR_KEYRING }}" --passphrase-file "${{ env.CR_PASSPHRASE_FILE }}" | cut -d: -f2) .tgz)
          ls *.prov | xargs -I {} sh -c 'mv $1 `basename $1 .prov`.asc' - {}
          echo "Created ${TAG}"  
          git add chart/ortelius/Chart.yaml
          git commit -m "Updated main chart"
          git tag -f "${TAG}"
          git push
          git push --tags
          gh release create "${TAG}" ${TAG}.* --title "${TAG}" --repo ortelius/ortelius-charts --notes "Supply Chain Evidence Catalog"
          helm repo index  chart/ortelius --merge index.yaml
          mv chart/ortelius/index.yaml .
          git add index.yaml
          git commit -m "update index.yaml"
          git checkout gh-pages
          git show main:index.yaml > index.yaml
          git add index.yaml
          git commit -m "Generate Main Charts ${TAG}"
          git push
        env:
          CR_TOKEN: "${{ secrets.HELM_INDEXER_TOKEN }}"
          GH_TOKEN: "${{ secrets.HELM_INDEXER_TOKEN }}"

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update main chart